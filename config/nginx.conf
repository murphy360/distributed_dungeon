events {
    worker_connections 1024;
}

http {
    upstream dungeon_master {
        server dungeon-master:3001;
    }

    upstream dungeon_service {
        server dungeon:3002;
    }

    upstream monster_service {
        server monster:3003;
    }

    upstream player_service {
        server player:3004;
    }

    upstream communication_service {
        server communication:3005;
    }

    upstream rules_engine {
        server rules-engine:3006;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # API Gateway routes
        location /api/sessions {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://dungeon_master;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/dm {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://dungeon_master;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/dungeons {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://dungeon_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/monsters {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://monster_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/players {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://player_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/communication {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://communication_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/rules {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://rules_engine;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # WebSocket proxying for real-time features
        location /socket.io/ {
            proxy_pass http://dungeon_master;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default route
        location / {
            return 404 '{"error": "Not Found"}';
            add_header Content-Type application/json;
        }
    }
}